<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryan.mapper.MainMapper">
	
	<select id="getEbookList" resultType="com.ryan.domain.book.EBookVO">
		SELECT * FROM ebook
		
		<choose>
			<when test="param1.equals('book_title')">
					WHERE
				<foreach collection="param2" index="index" item="search" separator="or">
					book_title LIKE  '%'||#{search}||'%'
				</foreach>
			</when>
			<when test="param1.equals('book_writer')">
				WHERE
				<foreach collection="param2" index="index" item="search" separator="or">
					book_writer LIKE '%' ||#{search}||'%'
				</foreach>
			</when>
			<when test="param1.equals('book_publisher')">
				WHERE
				<foreach collection="param2" index="index" item="search" separator="or">
					book_publisher LIKE '%' || #{search} || '%'
				</foreach>
			</when>
		</choose>
		and book_existence = 1
	</select>
	
		<select id="getBookList" resultType="com.ryan.domain.book.EBookVO">
		SELECT * FROM ebook
		
		<choose>
			<when test="param1.equals('book_title')">
					WHERE
				<foreach collection="param2" index="index" item="search" separator="or">
					book_title LIKE  '%'||#{search}||'%'
				</foreach>
			</when>
			<when test="param1.equals('book_writer')">
				WHERE
				<foreach collection="param2" index="index" item="search" separator="or">
					book_writer LIKE '%' ||#{search}||'%'
				</foreach>
			</when>
			<when test="param1.equals('book_publisher')">
				WHERE
				<foreach collection="param2" index="index" item="search" separator="or">
					book_publisher LIKE '%' || #{search} || '%'
				</foreach>
			</when>
		</choose>
		and book_existence = 0
	</select>
	
	<!-- 오늘의 추천도서 -->
	<select id="getTodayBookList" resultType="com.ryan.domain.book.EBookVO">
		SELECT e.* FROM ebook e, admin_bestlist a
		<where>
			e.book_num = a.book_num
		</where>
	</select>
	
	<!-- 사람들이 많이 읽은 책 -->
	<select id="getBestReadBook" resultType="com.ryan.domain.book.EBookVO">
		SELECT * FROM
		(
			SELECT ROW_NUMBER() OVER (ORDER BY count(m.book_num) DESC) rnn, e.book_num ,e.book_title , e.book_thumbnail , count(m.book_num) count 
			FROM ebook e, my_read_book m
			<where>
				e.book_num = m.book_num
			</where>
			GROUP BY e.book_num, e.book_title,e.book_thumbnail
		)
		<where>
			<![CDATA[
				rnn <= 9
			]]>
		</where>
	</select>
	
	<!-- 베스트셀러 -->
	<select id="getBestSeller" resultType="com.ryan.domain.book.EBookVO">
		SELECT * FROM
		(
			SELECT ROW_NUMBER() OVER (ORDER BY sum(o.book_count) DESC) rn,e.book_num,e.book_title, e.book_thumbnail, e.book_writer  FROM ebook e, first_category f , second_category s , order_object o , order_number n
		<where>
			e.category_num = s.category_num and s.first_num = f.first_num and o.book_num = e.book_num and o.order_number = n.order_number
			
			<choose> <!-- 카테고리별 추가 when -->
				<when test="category.equals('소설')">
					and f.first_num = 2
				</when>
				<when test="category.equals('시/에세이')">
					and f.first_num = 3
				</when>
			</choose>
			<choose>
				<when test="time.equals('연간')">
					<![CDATA[
						and TO_CHAR(n.order_date,'YYYYMMDD') >= TO_CHAR(SYSDATE-365,'YYYYMMDD') and TO_CHAR(n.order_date,'YYYYMMDD') <= TO_CHAR(SYSDATE,'YYYYMMDD')
					]]>
				</when>
				<when test="time.equals('월간')">
					<![CDATA[
						and TO_CHAR(n.order_date,'YYYYMMDD') >= TO_CHAR(SYSDATE-31,'YYYYMMDD') and TO_CHAR(n.order_date,'YYYYMMDD') <= TO_CHAR(SYSDATE,'YYYYMMDD')
					]]>
				</when>
				<when test="time.equals('주간')">
					<![CDATA[
						and TO_CHAR(n.order_date,'YYYYMMDD') >= TO_CHAR(SYSDATE-7,'YYYYMMDD') and TO_CHAR(n.order_date,'YYYYMMDD') <= TO_CHAR(SYSDATE,'YYYYMMDD')
					]]>
				</when>
				<when test="time.equals('일간')">
					<![CDATA[
						and TO_CHAR(n.order_date,'YYYYMMDD') = TO_CHAR(SYSDATE,'YYYYMMDD')
					]]>
				</when>
			</choose>
		</where>
		group by e.book_num, e.book_title,e.book_thumbnail,e.book_writer
		)
		<![CDATA[
		WHERE rn <=10
		]]>
		ORDER BY rn DESC
	</select>
	
	<!-- 세일 -->
	<select id="getDisCountBook" resultType="com.ryan.domain.book.EBookVO">
		<![CDATA[
			SELECT * FROM ebook
			WHERE book_discount > 0
			ORDER BY book_discount DESC
		]]>
	</select>	
	
	<select id="getRandomHashTag" resultType="com.ryan.domain.book.HashtagVO">
		SELECT * FROM
		(
			SELECT book_num , hash_tag FROM book_hashtag
			GROUP BY book_num, hash_tag 
			ORDER BY DBMS_RANDOM.RANDOM
		)
		<![CDATA[
			WHERE ROWNUM <=1
		]]>
	</select>
	
	<select id="getHashTagBook" resultType="com.ryan.domain.book.EBookVO">
		SELECT e.book_num , e.book_thumbnail 
		FROM ebook e, book_hashtag h
		<where>
			e.book_Num = h.book_num
			and h.hash_tag
			<foreach collection="list" item="hash" open="in (" separator="," close=")">
				#{hash.hashTag}
			</foreach>
		</where>
		GROUP BY e.book_num , e.book_thumbnail
	</select>
	
	
	<!-- 검색 -->
	
	<select id="getFilterSearch" resultType="com.ryan.domain.book.EBookVO">
		SELECT e.* FROM ebook e
		<choose>
			<when test="firstCategory != null">
				, first_category f , second_category s
				<where>
					e.category_num = s.category_num and s.first_num = f.first_num
					and
					<choose>
						<when test="firstCategory.equals('자기계발')"> <!-- 계속해서 when 으로 추가해주시면 됩니다. -->
							f.first_num = 11
						</when>
					</choose>
				</where>
			</when>
			<when test="secondCategory != null">
				, second_category s
				<where>
					e.category_num = s.category_num
					and
					<choose>
						<when test="secondCategory.equals('인간관계')">
							s.category_num = 21
						</when>
					</choose>
				</where>
			</when>
		</choose>
		<!-- GROUP BY 필요하면 여기에 추가. -->
	</select>
	
	<!-- 자동완성 -->
	<select id="getAutoKeyword" resultType="com.ryan.domain.main.KeywordAutoCompletionVO">
		SELECT book_num,book_title, book_writer FROM EBOOK
		<where>
			<choose>
				<when test="type.equals('title')">
					book_title LIKE #{keyword}||'%'
				</when>
				<when test="type.equals('author')">
					book_writer LIKE #{keyword}||'%'
				</when>
			</choose>
		</where>
		ORDER BY book_title ASC
	</select>
	
	<select id="getAutoKeywordHashtag" resultType="String">
		SELECT * FROM
		(
			SELECT hash_tag FROM book_hashtag
			WHERE book_num = #{bookNum}
			order by DBMS_RANDOM.RANDOM
		)
		<where>
			<![CDATA[
				rownum <= 3
			]]>
		</where>
	</select>	
	
	<select id="getMemberInterests" resultType="int">
		SELECT category_num FROM member_interests WHERE member_email = #{memberEmail}
	</select>
	
	<select id="getSecondCategory" resultType="int">
		SELECT category_num FROM second_category ORDER BY DBMS_RANDOM.RANDOM
	</select>
	
	<select id="getInterestsBook" resultType="com.ryan.domain.book.EBookVO">
		SELECT * FROM
		(
			SELECT * FROM ebook
			<where>
				<foreach collection="array" item="no" separator="," open="category_num in(" close=")">
					#{no}
				</foreach>
				ORDER BY DBMS_RANDOM.RANDOM
			</where>
		)
		<where>
			<![CDATA[
				rownum <=4
			]]>
		</where>
	</select>
	
	<select id="getAlarmBook" resultType="com.ryan.domain.book.EBookVO">
	<![CDATA[
		SELECT ebook.*, to_char(book_pb_date,'YYYYMMDD') - to_char(sysdate,'YYYYMMDD') commingBook FROM ebook WHERE to_char(book_pb_date,'YYYYMMDD') >= to_char(sysdate,'YYYYMMDD')
	]]>
	</select>
	<select id="getLatestReview" resultType="com.ryan.domain.custom.CustomReviewVO">
		SELECT * FROM
		(
			SELECT r.review_num,r.member_email ,r.review_title,r.review_content , TO_CHAR(r.review_regdate,'HHmmss') reviewRegdate ,m.member_nick_name , m.member_profile  FROM book_review r, member m
			<where>
				r.member_email = m.member_email
			</where>
			ORDER BY r.review_regdate DESC
		)
		<where>
			<![CDATA[
				rownum <= 13
			]]>
		</where>
	</select>
	
	
	
</mapper>